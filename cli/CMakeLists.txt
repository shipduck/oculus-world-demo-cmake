CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )
PROJECT( kuuko )

LIST( APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake" )
INCLUDE( pch_support )
INCLUDE( compiler_option )

SET( KUUKO_OCULUS_SDK_DIR ${CMAKE_CURRENT_SOURCE_DIR}/OculusSDK )
SET( KUUKO_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src )
SET( KUUKO_TEST_DIR ${CMAKE_CURRENT_SOURCE_DIR}/test )
SET( KUUKO_RES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/res )
SET( KUUKO_SCRIPT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/script )
SET( KUUKO_EXT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/ext )
SET( KUUKO_EXE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/exe )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/bin" )

ADD_DEFINITIONS(-DUNICODE -D_UNICODE)

IF( APPLE )
	SET( CMAKE_FIND_ROOT_PATH ${CMAKE_OSX_SYSROOT} )
ENDIF(  )

MACRO( APPEND_LINK_LIBS )
	LIST( APPEND KUUKO_LINK_LIBS ${ARGN} )
ENDMACRO( APPEND_LINK_LIBS )

MACRO( APPEND_LINK_EXT_LIBS OPTIMIZED_LIB DEBUG_LIB)
	LIST( APPEND KUUKO_LINK_EXT_LIBS optimized ${OPTIMIZED_LIB} debug ${DEBUG_LIB} )
ENDMACRO( APPEND_LINK_LIBS )

AUX_SOURCE_DIRECTORY( ${KUUKO_EXE_DIR} KUUKO_EXE_FILES )

#########################################################
# Add LibOVR
ADD_SUBDIRECTORY( ${KUUKO_EXT_DIR}/libovr )

INCLUDE_DIRECTORIES( ${LIBOVR_INC_DIR} )

APPEND_LINK_LIBS( LibOVR )

# Add Google Test
ADD_SUBDIRECTORY( ${KUUKO_EXT_DIR}/googletest )

INCLUDE_DIRECTORIES( ${KUUKO_EXT_DIR}/googletest/include )

# Add Ext Inlcude
INCLUDE_DIRECTORIES( ${KUUKO_EXT_DIR}/loki )

# Add boost Include
IF(NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/boost/boost )
	MESSAGE( FATAL_ERROR Please\ put\ boost\ library\ in\ “${CMAKE_CURRENT_SOURCE_DIR}/boost/boost” )
ENDIF(  )
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/boost )

INCLUDE_DIRECTORIES( ${KUUKO_OCULUS_SDK_DIR} )

IF( WIN32 )
	INCLUDE( FindDirectX )
	IF( DirectX_FOUND )
		INCLUDE_DIRECTORIES( ${DirectX_INCLUDE_DIR} )
		LIST( APPEND KUUKO_LINK_LIBS ${DirectX_LIBRARIES} )
	ELSE(  )
		MESSAGE( WARNING "Can't find DirectX SDK in your build system" )
	ENDIF(  )
	
	IF( DirectX_D3D10_FOUND )
		INCLUDE_DIRECTORIES( ${DirectX_D3D10_INCLUDE_DIR} )
		LIST( APPEND KUUKO_LINK_LIBS ${DirectX_D3D10_LIBRARY} )
	ELSE(  )
		MESSAGE( WARNING "Can't find DirectX 10 SDK in your build system" )
	ENDIF(  )
	
	IF( DirectX_D3D11_FOUND )
		INCLUDE_DIRECTORIES( ${DirectX_D3D11_INCLUDE_DIR} )
		LIST( APPEND KUUKO_LINK_LIBS ${DirectX_D3D11_LIBRARY} )
	ELSE(  )
		MESSAGE( WARNING "Can't find DirectX 11 SDK in your build system" )
	ENDIF(  )
ENDIF(  )

#########################################################

# Set Include Path
INCLUDE_DIRECTORIES( ${KUUKO_SRC_DIR} )

IF( MSVC )
	APPEND_LINK_LIBS( Setupapi winmm )
ENDIF()

# File List
FILE( GLOB KUUKO_SRC_FILES
	"${KUUKO_SRC_DIR}/*.*" )
FILE( GLOB KUUKO_CVARS_SRC_FILES 
	"${DOKURO_SRC_DIR}/cvars/*.*" )
	
FILE( GLOB KUUKO_TEST_SRC_FILES 
	"${KUUKO_TEST_DIR}/*.*" )
	
FILE( GLOB OCULUS_SDK_SRC_FILES 
	"${KUUKO_OCULUS_SDK_DIR}/TinyXml/*.*"
	"${KUUKO_OCULUS_SDK_DIR}/Platform/Platform.*"
	"${KUUKO_OCULUS_SDK_DIR}/Platform/Win32_Gamepad.*"
	"${KUUKO_OCULUS_SDK_DIR}/Platform/Win32_Platform.*"
	"${KUUKO_OCULUS_SDK_DIR}/Render/Render_D3D11_Device.*"
	"${KUUKO_OCULUS_SDK_DIR}/Render/Render_D3D10_Device.*"
	"${KUUKO_OCULUS_SDK_DIR}/Render/Render_Device.*"
	"${KUUKO_OCULUS_SDK_DIR}/Render/Render_LoadTextureDDS.*"
	"${KUUKO_OCULUS_SDK_DIR}/Render/Render_LoadTextureTGA.*"
	"${KUUKO_OCULUS_SDK_DIR}/Render/Render_XmlSceneLoader.*" )
	
ADD_LIBRARY( oculus_sdk
	${OCULUS_SDK_SRC_FILES} )

SOURCE_GROUP( "" FILES ${OCULUS_SDK_SRC_FILES} )
	
ADD_LIBRARY( kuuko 
	${KUUKO_SRC_FILES} 
	${KUUKO_CVARS_SRC_FILES} )
	
MSVC_SET_PCH( kuuko
	"${KUUKO_SRC_DIR}/stdafx.h"
	"${KUUKO_SRC_DIR}/stdafx.cpp")

SOURCE_GROUP( "" FILES ${KUUKO_SRC_FILES} )
SOURCE_GROUP( cvars FILES ${KUUKO_TEST_SRC_FILES} )

ADD_EXECUTABLE( kuuko_exe 
	${KUUKO_EXE_OPTION}
	${KUUKO_EXE_FILES} )
	
SOURCE_GROUP( "" FILES ${KUUKO_EXE_FILES} )

TARGET_LINK_LIBRARIES( kuuko_exe
	${KUUKO_LINK_LIBS}
	kuuko
	oculus_sdk
	${KUUKO_LINK_EXT_LIBS} )

ADD_EXECUTABLE( kuuko_test
	${KUUKO_TEST_SRC_FILES}
	"${KUUKO_SRC_DIR}/stdafx.h"
	"${KUUKO_SRC_DIR}/stdafx.cpp" )

SOURCE_GROUP( "" FILES ${KUUKO_TEST_SRC_FILES} )

TARGET_LINK_LIBRARIES( kuuko_test 
	${KUUKO_LINK_LIBS} 
	gtest
	kuuko
	oculus_sdk
	${KUUKO_LINK_EXT_LIBS}	)

MSVC_SET_PCH( kuuko_test
	"${KUUKO_SRC_DIR}/stdafx.h"
	"${KUUKO_SRC_DIR}/stdafx.cpp")

ADD_CUSTOM_TARGET( kuuko_res
	COMMAND python ${KUUKO_SCRIPT_DIR}/res_build.py
	WORKING_DIRECTORY ${KUUKO_SCRIPT_DIR}
	COMMENT "Create res.h from resource directory")

ADD_DEPENDENCIES( kuuko kuuko_res )

USE_CPP11( TARGET kuuko LibOVR gtest kuuko_exe kuuko_test )

IF( APPLE )
	# For debug... OSX App bundle find file from app bundle existance path
	SET_TARGET_PROPERTIES( kuuko_exe PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR} )
ENDIF(  )
